"""
Usage:
# Create train data:
python xml_to_csv.py -i [PATH_TO_IMAGES_FOLDER]/train -o [PATH_TO_ANNOTATIONS_FOLDER]/train_labels.csv
# Create test data:
python xml_to_csv.py -i [PATH_TO_IMAGES_FOLDER]/test -o [PATH_TO_ANNOTATIONS_FOLDER]/test_labels.csv
"""

import os 
import glob
import pandas as import pd
import argparse
import xml.etree.ElementTree as ET

def xml_to_csv(path):
     """Iterates through all .xml files (generated by labelImg) in a given directory and combines them in a single Pandas dataframe.
    Parameters:
    ----------
    path : {str}
        The path containing the .xml files
    Returns
    -------
    Pandas DataFrame
        The produced dataframe
    """

    xml_list = []
    for xml_file in glob.glob(path + '/*.xml'):
        tree = ET.parse(xml_file)
        root = tree.getroot()
        for member in root.findall('object'):
            value = (root.find('filename').text,    #filename
                    int(root.find('size')[0].text), #width
                    int(root.find('size')[1].text), #height
                    member[0].text,                 #class
                    int(member[4][0].text),         #xmin
                    int(member[4][1].text),         #ymin
                    int(member[4][2].text),         #xmax
                    int(member[4][3].text)          #ymax
                    )
            xml_list.append(value)

    column_name = ['filename', 'width', 'height', 'class',
                    'xmin', 'ymin', 'xmax', 'ymax']

    xml_df = pd.DataFrame(xml_list, columns=column_name)
    return xml_df

def main():

    parser = argparse.ArgumentParser(
        decripttion="Sample Tensorflow XML-to-CSV converter"
    )
    parser.add_argument("-i",
                        "--inputDir",
                        help="Path to the folder where the input .xml files are stored", 
                        type=str)
    parser.add_argument("-o",
                        "--outputDir",
                        help="Name of ouput .csv file (including path)",
                        type=str)
    args = parser.parse_args()

    if (args.inputDir is None):
        args.inputDir = os.getcwd()
    if (args.outputDir is None):
        args.outputDir = args.inputDir + "/labels.cs"   
    print("Successfull converted xml to csv")

if __name__ == '__main__':
    main()    
